"use strict";angular.module("mainApp").controller("BillingItemMasterController",["billingItemMasterRest","listPaging","state","$scope",function(a,b,c,d){b.refresh()}]),angular.module("mainApp").controller("ContractListController",["contractRest","listPaging","state","$scope",function(a,b,c,d){var e=this;b.triggerFunction=function(){return b.setLoading(!0),a.getLeaseholdList(b.mergeParam(e.param),function(a){b.setData(a),b.setLoading(!1)})},e.paramInit={words:"",buildingCode:"",customerType:"",status:""},e.clear=function(){e.param=angular.copy(e.paramInit),b.refresh()},e.clear()}]),angular.module("mainApp").controller("ContractNewController",["contractRest","state","$scope",function(a,b,c){}]),angular.module("mainApp").controller("CustomerListController",["customerRest","listPaging","state","$scope",function(a,b,c,d){var e=this;b.triggerFunction=function(){return b.setLoading(!0),a.getCustomerList(b.mergeParam(e.param),function(a){b.setData(a),b.setLoading(!1)})},e.paramInit={words:"",customerType:"",paymentMethod:""},e.clear=function(){e.param=angular.copy(e.paramInit),b.refresh()},e.clear()}]),angular.module("mainApp").controller("CustomerNewController",["customerRest","state","$scope","convToHankakuKana",function(a,b,c,d){var e=this;e.view={changeBankAccountName:function(){e.model.bankAccountName=d(e.model.bankAccountName)}}}]),angular.module("mainApp").controller("DashboardController",["dashboardRest","state","$q",function(a,b,c){var d=this;d.months=[],d.events=[],b.loading=!0,c.all([a.getProperties().$promise,a.getMonthlyBillingList().$promise,a.getEachBilling().$promise,a.getContractStatus().$promise,a.getEventList().$promise]).then(function(a){d.totalRoomCount=a[0].totalRoomCount,d.occupiedRoomCount=a[0].occupiedRoomCount,d.spareRoomCount=a[0].spareRoomCount,d.occupierCount=a[0].occupierCount,d.months=a[1],d.mishori2Count=a[2].mishori2Count,d.billing2Count=a[2].billing2Count,d.billingPast2Count=a[2].billingPast2Count,d.demand2Count=a[2].demand2Count,d.demandPast2Count=a[2].demandPast2Count,d.resultShort2Count=a[2].resultShort2Count,d.applyingCount=a[3].applyingCount,d.beforeRenewCount=a[3].beforeRenewCount,d.afterRenewCount=a[3].afterRenewCount,d.taikyoYoteiCount=a[3].taikyoYoteiCount,d.taikyoMiseisanCount=a[3].taikyoMiseisanCount,d.refundCount=a[3].refundCount,d.events=a[4],d.filteredEvents=a[4],b.loading=!1}),d.line1={buildingCountClicked:function(){alert("管理棟数")},totalRoomCountClicked:function(){alert("管理物件数")},occupiedRoomCountClicked:function(){alert("契約物件数")},spareRoomCountClicked:function(){alert("空き物件数")},occupierCountClicked:function(){alert("入居者人数")},applyingCountClicked:function(){alert("契約手続中")}},d.line2={mishoriCountClicked:function(){alert("未処理")},billingCountClicked:function(){alert("請求中")},billingPastCountClicked:function(){alert("請求中　遅延")},demandCountClicked:function(){alert("督促中")},demandPastCountClicked:function(){alert("督促中 遅延")},resultNgCountClicked:function(){alert("振替不能")},resultShortCountClicked:function(){alert("入金不足")},resultOkCountClicked:function(){alert("処理済み")}},d.line3={mishori2CountClicked:function(){alert("未処理")},billing2CountClicked:function(){alert("請求中")},billing2PastCountClicked:function(){alert("請求中　遅延")},demand2CountClicked:function(){alert("督促中")},demandPast2CountClicked:function(){alert("督促中 遅延")},resultShort2CountClicked:function(){alert("入金不足")}},d.line4={beforeRenewCountClicked:function(){alert("更新予定")},afterRenewCountClicked:function(){alert("更新処理済み")},taikyoYoteiCountClicked:function(){alert("退去予定")},taikyoMiseisanCountClicked:function(){alert("退去後未精算")},refundCountClicked:function(){alert("返金対象")}}}]),angular.module("mainApp").controller("EventCalendarController",["eventCalendarRest","listPaging","state","$scope",function(a,b,c,d){var e=this,f=$("#event-edit-modal"),g=$("#actionDate");b.triggerFunction=function(){return b.setLoading(!0),a.getEventCalendarList(b.mergeParam(e.param),function(a){b.setData(a),b.setLoading(!1)})},e.paramInit={words:"",fromDate:"",toDate:""},e.clear=function(){e.param=angular.copy(e.paramInit),b.refresh()},e.clear(),e.view={onClickEditButton:function(a){e.editModal.title="更新",e.editModal.model={id:a.id,status:a.status,actionDate:a.actionDate,title:clearTag(a.title),description:clearTag(a.description),delete:!1},e.editModal.show(),g.datepicker("update",a.actionDate)},onClickAddButton:function(){e.editModal.title="登録",e.editModal.show(),g.datepicker("update","")}},e.editModal={title:"",okButtonName:"",modelInit:{id:"",status:"",actionDate:"",title:"",description:"",delete:!1},model:angular.copy(this.modelInit),show:function(){f.modal("show"),f.on("hidden.bs.modal",function(){e.editModal.model=angular.copy(e.editModal.modelInit),d.eventInputForm.$setPristine()})},onClickOk:function(c){!e.editModal.model.delete&&c.$invalid||(e.editModal.model.delete?a.deleteEventCalendar({id:e.editModal.model.id},function(a){b.refresh(),f.modal("hide")}):a.saveEventCalendar(e.editModal.model,function(a){b.refresh(),f.modal("hide")}))}}}]),angular.module("mainApp").controller("MainController",["$location","$route","masters","userInfo","state","confirmModal","listPaging","patterns",function(a,b,c,d,e,f,g,h){var i=this;i.changeView=function(b){e.activeView=b,a.path(b)},i.isActiveView=function(a){return Array.isArray(a)?a.indexOf(e.activeView)>=0:e.activeView==a};var j="";i.managementGroupChanged=function(){e.refreshManagementId(function(){var a=i.state.selectedManagementType;j==a?b.reload():("O"==a?i.changeView("/dashboard"):"S"==a?i.changeView("/system"):"M"==a&&i.changeView("/propertiesMaster"),j=a)})},i.changeView("/dashboard"),c.refreshMasters(),d.refreshUserInfo(),i.managementGroupChanged(),i.masters=c,i.userInfo=d,i.state=e,i.confirm=f,i.paging=g,i.patterns=h}]),angular.module("mainApp").controller("MonthlyBillingController",["monthlyBillingRest","listPaging","confirmModal","$timeout","state","$q",function(a,b,c,d,e,f){var g=this;e.loading=!0,g.checkbox=[];var h=function(){return a.getProcessingStatusList(function(a){angular.equals(g.processingStatusList,a)||(g.processingStatusList=a),angular.forEach(a,function(a){"P"==a.monthlyStatus&&"/monthlyBilling"==e.activeView&&d(function(){h()},1e3)})}).$promise},i=function(){return a.getBillingMethodList(function(a){angular.equals(g.billingMethodList,a)||(g.billingMethodList=a),angular.forEach(a,function(a){"P"==a.status&&"/monthlyBilling"==e.activeView&&d(function(){i()},1e3)})}).$promise};g.createStatement=function(a,b){c.title="請求データ作成処理",c.body=b+"の請求データを作成します。<br/>よろしいですか？",c.open(function(){alert("ok clicked!")})},g.settle=function(a,b){c.title="口振請求データ作成処理",c.body="<div style='color:red;font-weight: bold' class='alert alert-danger'><i class='fa fa-exclamation-circle'></i> 口振請求データを作成すると、請求データの編集は出来なくなります</div>"+b+"の請求データを確定し口振請求データを作成します。<br/>よろしいですか？",c.open(function(){alert("ok clicked!")})},g.checkAll=function(a){g.checkbox=g.checkbox.map(function(){return a})};var j=function(){return a.getYearMonthList(function(a){var c={};angular.forEach(a,function(a){Array.isArray(c[a.year])?c[a.year].push(a.month):c[a.year]=[a.month]}),g.yearMonthTable=c;var d=[];for(var e in c)d.push(e);g.yearList=d.sort(function(a,b){return a<b?1:a>b?-1:0}),g.selectedYear=g.yearList[0],g.selectedMonth=Math.max.apply(null,g.yearMonthTable[g.selectedYear]),g.selectedStatus="SK",b.refresh()}).$promise};g.mishoriCount=0,g.yearChanged=function(a){g.monthClicked(Math.max.apply(null,g.yearMonthTable[a]))},g.monthClicked=function(a){g.selectedMonth=a,b.refresh()},g.statusClicked=function(a){g.selectedStatus=a,b.refresh()},g.showSearchPaneClicked=function(a){g.showSearchPane=!a,b.refresh()},g.searchPaneClear=function(){g.selectedBuildingCode="",g.searchText="",g.selectedPaymentMethod="",b.refresh()},g.rowClicked=function(a,b){alert("clicked row is "+a)},b.triggerFunction=function(){var c={offset:b.getOffsetForRetrieve(),limit:b.getLimitForRetrieve(),year:g.selectedYear,month:g.selectedMonth,status:g.selectedStatus,buildingCode:g.showSearchPane?g.selectedBuildingCode:"",paymentMethod:g.showSearchPane?g.selectedPaymentMethod:"",searchText:g.showSearchPane?g.searchText:""};b.setLoading(!0),a.getBillingDataList(c,function(a){b.setData(a),b.setLoading(!1)})},f.all([h(),i(),j()]).then(function(a){e.loading=!1})}]),angular.module("mainApp").controller("PropertiesMasterController",["propertiesMasterRest","listPaging","state","$scope","masters",function(a,b,c,d,e){var f=this;f.sortableOptions={axis:"y",update:function(){e.managementGroupList.forEach(function(a,b){a.sortOrder=b}),a.saveManagementGroups(e.managementGroupList,function(a){})}},f.groupView={onClickEdit:function(a){f.groupModal.title="管理グループの更新",f.groupModal.model={id:a.id,name:a.name,type:a.type,sortOrder:a.sortOrder,delete:!1},f.groupModal.show()},onClickAdd:function(){f.groupModal.title="管理グループの登録",f.groupModal.model=angular.copy(f.groupModal.modelInit),f.groupModal.show()}},f.groupModal={title:"",okButtonName:"",modelInit:{id:"",name:"",type:"O",sortOrder:"9999",delete:!1},model:angular.copy(this.modelInit),show:function(){$("#group-edit-modal").modal("show"),$("#group-edit-modal").on("hidden.bs.modal",function(){f.groupModal.model=angular.copy(f.groupModal.modelInit),d.groupInputForm.$setPristine()})},onClickOk:function(b){!f.groupModal.model.delete&&b.$invalid||(f.groupModal.model.delete?a.deleteManagementGroup({id:f.groupModal.model.id},function(a){e.refreshMasters(),$("#group-edit-modal").modal("hide")}):a.saveManagementGroups([f.groupModal.model],function(a){e.refreshMasters(),$("#group-edit-modal").modal("hide")}))}},f.buildingView={onClickEdit:function(a){f.buildingModal.title="建物の更新",f.buildingModal.newRec=!1,f.buildingModal.model={code:a.code,name:a.name,address:a.address,cutoffDay:a.cutoffDay,delete:a.delete,facilities:angular.copy(a.facilities)},f.buildingModal.show()},onClickAdd:function(){f.buildingModal.title="建物の登録",f.buildingModal.newRec=!0,f.buildingModal.model=angular.copy(f.buildingModal.modelInit),f.buildingModal.show()}},f.buildingModal={newRec:!1,title:"",okButtonName:"",modelInit:{code:"",name:"",address:"",cutoffDay:"20",delete:!1,facilities:[]},model:angular.copy(this.modelInit),show:function(){$("#building-edit-modal").modal("show"),$("#building-edit-modal").on("hidden.bs.modal",function(){f.buildingModal.model=angular.copy(f.buildingModal.modelInit),d.buildingInputForm.$setPristine()})},onClickOk:function(b){!f.buildingModal.model.delete&&b.$invalid||(f.buildingModal.model.delete?a.deleteBuilding({code:f.buildingModal.model.code},function(a){e.refreshMasters(),$("#building-edit-modal").modal("hide")}):a.saveBuilding(f.buildingModal.model,function(a){e.refreshMasters(),$("#building-edit-modal").modal("hide")}))}}}]),angular.module("mainApp").controller("SystemController",["systemRest","listPaging","state","$scope",function(a,b,c,d){b.refresh()}]),angular.module("mainApp").controller("UtilitiesMasterController",["utilitiesMasterRest","listPaging","state","$scope",function(a,b,c,d){b.refresh()}]);